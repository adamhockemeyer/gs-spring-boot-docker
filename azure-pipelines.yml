# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:
- job: Build
  steps:

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: Maven@4

    inputs:
      mavenPomFile: './complete/pom.xml'
      goals: 'clean install'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false


  - task: CopyFiles@2
    inputs:
      SourceFolder: './complete/target'
      Contents: '**/*.jar'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    displayName: 'Publish Artifact'

- job: Deploy
  steps:
  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'drop'
      itemPattern: '**/*.jar'
      downloadPath: '$(Build.ArtifactStagingDirectory)'

  - script: 'ls $(Build.ArtifactStagingDirectory)'
    displayName: 'List Contents of Artifact Staging Directory'

  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'azure-svc-connection-spring'
      appType: 'webAppLinux'
      WebAppName: 'ahock-spring'
      packageForLinux: '$(Build.ArtifactStagingDirectory)/*.jar'

